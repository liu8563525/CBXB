DELETE FROM TMP_CODELIST;
DELETE FROM TMP_CUST_FIELD;
DELETE FROM TMP_DATA_LIST_TYPE;
DELETE FROM TMP_HCL;
DELETE FROM TMP_HCL_NODE;

commit;


CREATE TABLE  TMP_CODELIST
(
  ID                VARCHAR2(255 CHAR)          NOT NULL,
  DATALISTTYPE      VARCHAR2(255 CHAR),
  CODELISTNAME      VARCHAR2(255 CHAR),
  SEQ               VARCHAR2(255 CHAR),
  CODE              VARCHAR2(255 CHAR),
  NAME              VARCHAR2(255 CHAR),
  NOTAVAILABLE      VARCHAR2(255 CHAR),
  COLUMN1           VARCHAR2(255 CHAR),
  COLUMN2           VARCHAR2(255 CHAR),
  COLUMN3           VARCHAR2(255 CHAR),
  COLUMN4           VARCHAR2(255 CHAR),
  COLUMN5           VARCHAR2(255 CHAR),
  COLUMN6           VARCHAR2(255 CHAR),
  COLUMN7           VARCHAR2(255 CHAR),
  COLUMN8           VARCHAR2(255 CHAR),
  COLUMN9           VARCHAR2(255 CHAR),
  COLUMN10          VARCHAR2(255 CHAR),
  COLUMN11          VARCHAR2(255 CHAR),
  COLUMN12          VARCHAR2(255 CHAR),
  COLUMN13          VARCHAR2(255 CHAR),
  COLUMN14          VARCHAR2(255 CHAR),
  COLUMN15          VARCHAR2(255 CHAR),
  COLUMN16          VARCHAR2(255 CHAR),
  COLUMN17          VARCHAR2(255 CHAR),
  COLUMN18          VARCHAR2(255 CHAR),
  COLUMN19          VARCHAR2(255 CHAR),
  COLUMN20          VARCHAR2(255 CHAR),
  COLUMN21          VARCHAR2(255 CHAR),
  COLUMN22          VARCHAR2(255 CHAR),
  COLUMN23          VARCHAR2(255 CHAR),
  COLUMN24          VARCHAR2(255 CHAR),
  COLUMN25          VARCHAR2(255 CHAR),
  COLUMN26          VARCHAR2(255 CHAR),
  COLUMN27          VARCHAR2(255 CHAR),
  COLUMN28          VARCHAR2(255 CHAR),
  COLUMN29          VARCHAR2(255 CHAR),
  COLUMN30          VARCHAR2(255 CHAR),
  COLUMN31          VARCHAR2(255 CHAR),
  COLUMN32          VARCHAR2(255 CHAR),
  COLUMN33          VARCHAR2(255 CHAR),
  COLUMN34          VARCHAR2(255 CHAR),
  COLUMN35          VARCHAR2(255 CHAR),
  COLUMN36          VARCHAR2(255 CHAR),
  COLUMN37          VARCHAR2(255 CHAR),
  COLUMN38          VARCHAR2(255 CHAR),
  COLUMN39          VARCHAR2(255 CHAR),
  COLUMN40          VARCHAR2(255 CHAR),
  COLUMN41          VARCHAR2(255 CHAR),
  COLUMN42          VARCHAR2(255 CHAR),
  COLUMN43          VARCHAR2(255 CHAR),
  COLUMN44          VARCHAR2(255 CHAR),
  COLUMN45          VARCHAR2(255 CHAR),
  COLUMN46          VARCHAR2(255 CHAR),
  COLUMN47          VARCHAR2(255 CHAR),
  COLUMN48          VARCHAR2(255 CHAR),
  COLUMN49          VARCHAR2(255 CHAR),
  COLUMN50          VARCHAR2(255 CHAR),
  COLUMN51          VARCHAR2(255 CHAR),
  COLUMN52          VARCHAR2(255 CHAR),
  COLUMN53          VARCHAR2(255 CHAR),
  COLUMN54          VARCHAR2(255 CHAR),
  COLUMN55          VARCHAR2(255 CHAR),
  COLUMN56          VARCHAR2(255 CHAR),
  COLUMN57          VARCHAR2(255 CHAR),
  COLUMN58          VARCHAR2(255 CHAR),
  COLUMN59          VARCHAR2(255 CHAR),
  COLUMN60          VARCHAR2(255 CHAR),
  CODELIST_BOOK_ID  CHAR(32 BYTE),
  CODELIST_ID       CHAR(32 BYTE),
  DESCRIPTION       VARCHAR2(400 BYTE),
  EXCELNAME         VARCHAR2(400 BYTE),
  EXCELROWNUM       VARCHAR2(400 BYTE),
  TYPE_ID           CHAR(32 BYTE)
);

CREATE TABLE  TMP_CUST_FIELD
(
  ID                 CHAR(32 BYTE),
  NAME               VARCHAR2(1000 BYTE),
  APPLY_TO           VARCHAR2(1000 BYTE),
  TYPE               VARCHAR2(1000 BYTE),
  TYPE_NAME          VARCHAR2(1000 BYTE),
  TAB_ID             VARCHAR2(1000 BYTE),
  TABLE_ID           VARCHAR2(1000 BYTE),
  DISPLAYED_HEADING  VARCHAR2(1000 BYTE),
  SEQUENCE           VARCHAR2(1000 BYTE),
  FIELD              VARCHAR2(1000 BYTE),
  LABEL              VARCHAR2(1000 BYTE),
  VALIDATION         VARCHAR2(1000 BYTE),
  UPDATED_BY_DC      VARCHAR2(1000 BYTE),
  FORMULA            VARCHAR2(1000 BYTE),
  DEF_ID             CHAR(32 BYTE),
  EXCELROWNUM        VARCHAR2(200 BYTE),
  EXCELNAME          VARCHAR2(200 BYTE),
  MODULE_ID          VARCHAR2(200 BYTE),
  DEF_ITEM_ID        CHAR(32 BYTE),
  DATA_TYPE          VARCHAR2(1000 BYTE),
  SHOW               VARCHAR2(1000 BYTE),
  MANDATORY          VARCHAR2(1000 BYTE),
  ON_SCREEN_REMARK   VARCHAR2(1000 BYTE),
  APPLY_TO_ENTITY    VARCHAR2(200 BYTE)
);



CREATE TABLE  TMP_DATA_LIST_TYPE
(
  ID                     CHAR(32 BYTE),
  DATALISTTYPE           VARCHAR2(500 BYTE),
  APPLY_TO               VARCHAR2(500 BYTE),
  DESCRIPTION            VARCHAR2(500 BYTE),
  SEQ                    VARCHAR2(500 BYTE),
  FIELD                  VARCHAR2(500 BYTE),
  DATA_TYPE              VARCHAR2(500 BYTE),
  FIELD_LABEL            VARCHAR2(500 BYTE),
  NOT_AVAILABLE          VARCHAR2(500 BYTE),
  MANDATORY              VARCHAR2(500 BYTE),
  EXCELROWNUM            VARCHAR2(400 BYTE),
  EXCELNAME              VARCHAR2(400 BYTE),
  CODELIST_TYPE_ID       CHAR(32 BYTE),
  CODELIST_TYPE_ITEM_ID  CHAR(32 BYTE)
);


CREATE TABLE  TMP_HCL
(
  ID                          CHAR(32 BYTE),
  HIERARCHY_TYPE              VARCHAR2(400 BYTE),
  SSL                         VARCHAR2(400 BYTE),
  RSSL                        VARCHAR2(400 BYTE),
  HIERARCHY_TYPE_DESCRIPTION  VARCHAR2(400 BYTE),
  LEVEL_1                     VARCHAR2(400 BYTE),
  LEVEL_2                     VARCHAR2(400 BYTE),
  LEVEL_3                     VARCHAR2(400 BYTE),
  LEVEL_4                     VARCHAR2(400 BYTE),
  LEVEL_5                     VARCHAR2(400 BYTE),
  LEVEL_6                     VARCHAR2(400 BYTE),
  LEVEL_7                     VARCHAR2(400 BYTE),
  LEVEL_8                     VARCHAR2(400 BYTE),
  LEVEL_9                     VARCHAR2(400 BYTE),
  LEVEL_10                    VARCHAR2(400 BYTE),
  HCL_ID                      CHAR(32 BYTE),
  EXCELROWNUM                 VARCHAR2(200 BYTE),
  EXCELNAME                   VARCHAR2(200 BYTE),
  HCL_TYPE_ID                 CHAR(32 BYTE),
  LEVEL_1_ID                  CHAR(32 BYTE),
  LEVEL_2_ID                  CHAR(32 BYTE),
  LEVEL_3_ID                  CHAR(32 BYTE),
  LEVEL_4_ID                  CHAR(32 BYTE),
  LEVEL_5_ID                  CHAR(32 BYTE),
  LEVEL_6_ID                  CHAR(32 BYTE),
  LEVEL_7_ID                  CHAR(32 BYTE),
  LEVEL_8_ID                  CHAR(32 BYTE),
  LEVEL_9_ID                  CHAR(32 BYTE),
  LEVEL_10_ID                 CHAR(32 BYTE),
  LEVEL1_NAME                 VARCHAR2(500 BYTE),
  LEVEL2_NAME                 VARCHAR2(500 BYTE),
  LEVEL3_NAME                 VARCHAR2(500 BYTE),
  LEVEL4_NAME                 VARCHAR2(500 BYTE),
  LEVEL5_NAME                 VARCHAR2(500 BYTE),
  LEVEL6_NAME                 VARCHAR2(500 BYTE),
  LEVEL7_NAME                 VARCHAR2(500 BYTE),
  LEVEL8_NAME                 VARCHAR2(500 BYTE),
  LEVEL9_NAME                 VARCHAR2(500 BYTE),
  LEVEL10_NAME                VARCHAR2(500 BYTE),
  CODE_LIST_TYPE_ID           CHAR(32 BYTE)
);



CREATE TABLE  TMP_HCL_NODE
(
  ID              CHAR(32 BYTE),
  HCL_ID          CHAR(32 BYTE),
  HCL_NODE_ID     CHAR(32 BYTE),
  PARENT_NODE_ID  CHAR(32 BYTE),
  HIERARCHY_TYPE  NVARCHAR2(200),
  NODE_LEVEL      NUMBER(10),
  NODE_CODE       NVARCHAR2(200),
  NODE_NAME       NVARCHAR2(200),
  FULL_LINEAGE    NVARCHAR2(1000),
  SEQ             NUMBER(10),
  LINEAGE         NVARCHAR2(1000)
);
-- CNT-5968 BEGIN --
CREATE OR REPLACE PROCEDURE SP_INIT_RULE_DATA_TMPL(I_DOMAIN_ID IN VARCHAR2)
AS
        CURSOR C_MEMBER_RULE_DATA IS SELECT ID, MEMBER_ID, DECODE(MEMBER_TYPE, 1, 'User', 2, 'Group', 'User') REF_ENTITY, ACCESS_OBJECT_ID, CONDITION_ID, DECODE(ACCESS_RIGHT, 1, 'deletableMembers', 2,'editableMembers',3,'readableMembers',4,'deniedMembers','deniedMembers') FIELD_ID
                            FROM CNT_MEMBER_RULE_DATA WHERE DOMAIN_ID = I_DOMAIN_ID;
        CURSOR C_MRD_CONDITON IS SELECT DISTINCT CONDITION_ID, ACCESS_OBJECT_ID FROM CNT_MEMBER_RULE_DATA WHERE DOMAIN_ID = I_DOMAIN_ID;
   
    V_RULE_DATA_TMPL_ID CHAR(32);
BEGIN
      ---------------Step 1: Clear the old data. -----------------------
      -- 1. Update the member_rule_data
      UPDATE CNT_MEMBER_RULE_DATA SET RULE_DATA_TMPL_ID = NULL WHERE  DOMAIN_ID = I_DOMAIN_ID AND RULE_DATA_TMPL_ID IS NOT NULL;
            -- 2. DELETE the selection field which parentId = CNT_RULE_DATA_TMPL.id.
      DELETE FROM CNT_SELECTION WHERE PARENT_ID IN (SELECT ID FROM CNT_RULE_DATA_TMPL WHERE DOMAIN_ID = I_DOMAIN_ID);
            -- 3. DELETE the cnt_rule_data_tmpl record.
      DELETE FROM CNT_RULE_DATA_TMPL WHERE DOMAIN_ID = I_DOMAIN_ID;

         ---------------Step 2: Re-Insert data into CNT_RULE_DATA_TMPL and CNT_SELECTION -----------------------
            FOR CUR_CONDITION IN C_MRD_CONDITON
        LOOP
            V_RULE_DATA_TMPL_ID:=LOWER(SYS_GUID());
            -- 1. Add cnt_rule_data_tmpl record.
            INSERT INTO CNT_RULE_DATA_TMPL (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, ACCESS_OBJECT_ID) 
            SELECT V_RULE_DATA_TMPL_ID,1, 1, I_DOMAIN_ID, CUR_CONDITION.ACCESS_OBJECT_ID FROM DUAL;
            
        -- 2. Add cnt_selection 'condition' record
            INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, 
                            UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, 
                            FIELD_ID, REF_ENTITY, REF_ID)
            SELECT lower(sys_guid()), 1, 1, I_DOMAIN_ID, 'system', 
                    'system', sysdate, sysdate, V_RULE_DATA_TMPL_ID, 'RuleDataTmpl', 
                    'conditionIds', 'Condition', CUR_CONDITION.CONDITION_ID 
            FROM DUAL;
            
            -- CONDITION * MEMBER_RULE_DATA
            FOR CUR IN C_MEMBER_RULE_DATA
            LOOP
                IF CUR.ACCESS_OBJECT_ID = CUR_CONDITION.ACCESS_OBJECT_ID AND CUR.CONDITION_ID = CUR_CONDITION.CONDITION_ID THEN
                    -- 3. Update CNT_MEMBER_RULE_DATA.RULE_DATA_TMPL_ID with the new UUID
            UPDATE CNT_MEMBER_RULE_DATA SET RULE_DATA_TMPL_ID = V_RULE_DATA_TMPL_ID WHERE ID = CUR.ID AND RULE_DATA_TMPL_ID IS NULL;
                    
            -- 4. Add cnt_selection '${CUR.REF_ENTIT}' record
                    INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, 
                            UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, 
                            FIELD_ID, REF_ENTITY, REF_ID)
            SELECT lower(sys_guid()), 1, 1, I_DOMAIN_ID, 'system', 
                    'system', sysdate, sysdate, V_RULE_DATA_TMPL_ID, 'RuleDataTmpl', 
                    CUR.FIELD_ID, CUR.REF_ENTITY, CUR.MEMBER_ID 
            FROM DUAL;
                END IF;
            END LOOP;
        END LOOP;
END;
/

CALL SP_INIT_RULE_DATA_TMPL('/');

DROP PROCEDURE SP_INIT_RULE_DATA_TMPL;
-- CNT-5968 END --




-- CNT-6056 BEGIN --
   -- the content has been moved in 10140.init_role_ui_table.sql
-- CNT-6056 END --



-- CNT-6070 BEGIN --
-- ************** Group module **************
DELETE FROM CNT_SELECTION WHERE PARENT_ENTITY='Group' AND FIELD_ID='memberOfId' AND DOMAIN_ID = '/';
DELETE FROM CNT_SELECTION WHERE PARENT_ENTITY='Group' AND FIELD_ID='grantRoleId' AND DOMAIN_ID = '/';
DELETE FROM CNT_SELECTION WHERE PARENT_ENTITY='Group' AND FIELD_ID='denyRoleId' AND DOMAIN_ID = '/';

INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, FIELD_ID, REF_ENTITY, REF_ID) 
    SELECT LOWER(SYS_GUID()), 1, 1, '/', 'system', 'system', sysdate, sysdate, MEMBER_ID, 'Group', 'memberOfId', 'Group', GROUP_ID FROM CNT_GROUP_MEMBER WHERE DOMAIN_ID = '/' AND MEMBER_TYPE = 2;
INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, FIELD_ID, REF_ENTITY, REF_ID) 
    SELECT LOWER(SYS_GUID()), 1, 1, '/', 'system', 'system', sysdate, sysdate, MEMBER_ID, 'Group', 'grantRoleId', 'Role', ROLE_ID FROM CNT_MEMBER_ROLE WHERE DOMAIN_ID = '/' AND MEMBER_TYPE = 2 AND ACCESS_RIGHT = 1;
INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, FIELD_ID, REF_ENTITY, REF_ID) 
    SELECT LOWER(SYS_GUID()), 1, 1, '/', 'system', 'system', sysdate, sysdate, MEMBER_ID, 'Group', 'denyRoleId', 'Role', ROLE_ID FROM CNT_MEMBER_ROLE WHERE DOMAIN_ID = '/' AND MEMBER_TYPE = 2 AND ACCESS_RIGHT = 2;

DELETE FROM CNT_GROUP_HC WHERE DOMAIN_ID = '/';

INSERT INTO CNT_GROUP_HC(ID, REVISION, ENTITY_VERSION, DOMAIN_ID, GROUP_ID, HCL_TYPE_NAME,
HCL_LEVEL_NAME, HCL_NODE_CODE, HCL_FULL_LINEAGE, HCL_ID, HCL_NODE_ID, HCL_TYPE_ID, 
HCL_TYPE_LEVEL_ID)
    SELECT LOWER(SYS_GUID()), 1, 1, '/', CMHN.MEMBER_ID AS "groupId", CHT.DESCRIPTION AS "hclTypeName", 
    CHTL.NAME AS "hclLevelName", NODE.CODE AS "hclNodeCode", NODE.FULL_LINEAGE AS "hclFullLineage", CHT.ID AS "hclId", hcl_node_id AS "hclNodeId", CHT.ID AS "hclTypeId",
    CHTL.ID AS "hclTypeLevelId"
    FROM CNT_MEMBER_HCL_NODE CMHN
    LEFT JOIN CNT_HCL_NODE NODE ON NODE.ID = CMHN.HCL_NODE_ID
    LEFT JOIN CNT_HCL_TYPE CHT ON CHT.ID = NODE.HCL_ID
    LEFT JOIN CNT_HCL_TYPE_LEVEL CHTL ON CHTL.PARENT_ID = CHT.ID AND CHTL.TYPE_LEVEL = NODE.NODE_LEVEL
    WHERE CMHN.MEMBER_TYPE = 2 AND CMHN.DOMAIN_ID = '/';
-- CNT-6070 END --




-- CNT-6070 BEGIN --
-- ************** User module **************
DELETE FROM CNT_SELECTION WHERE PARENT_ENTITY='User' AND FIELD_ID='memberOfId' AND DOMAIN_ID = '/';
DELETE FROM CNT_SELECTION WHERE PARENT_ENTITY='User' AND FIELD_ID='grantRoleId' AND DOMAIN_ID = '/';
DELETE FROM CNT_SELECTION WHERE PARENT_ENTITY='User' AND FIELD_ID='denyRoleId' AND DOMAIN_ID = '/';

INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, FIELD_ID, REF_ENTITY, REF_ID) 
    SELECT lower(sys_guid()), 1, 1, DOMAIN_ID, 'system', 'system', sysdate, sysdate, MEMBER_ID, 'User', 'memberOfId', 'Group', GROUP_ID FROM CNT_GROUP_MEMBER WHERE DOMAIN_ID = '/' AND MEMBER_TYPE = 1;
INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, FIELD_ID, REF_ENTITY, REF_ID) 
    SELECT lower(sys_guid()), 1, 1, DOMAIN_ID, 'system', 'system', sysdate, sysdate, MEMBER_ID, 'User', 'grantRoleId', 'Role', ROLE_ID FROM CNT_MEMBER_ROLE WHERE DOMAIN_ID = '/' AND ACCESS_RIGHT = 1 AND MEMBER_TYPE = 1;
INSERT INTO CNT_SELECTION (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, CREATE_USER, UPDATE_USER, CREATED_ON, UPDATED_ON, PARENT_ID, PARENT_ENTITY, FIELD_ID, REF_ENTITY, REF_ID) 
    SELECT lower(sys_guid()), 1, 1, DOMAIN_ID, 'system', 'system', sysdate, sysdate, MEMBER_ID, 'User', 'denyRoleId', 'Role', ROLE_ID FROM CNT_MEMBER_ROLE WHERE DOMAIN_ID = '/' AND ACCESS_RIGHT = 2 AND MEMBER_TYPE = 1;

DELETE FROM CNT_USER_HC WHERE DOMAIN_ID = '/';

INSERT INTO CNT_USER_HC(ID, REVISION, ENTITY_VERSION, DOMAIN_ID, USER_ID, HCL_TYPE_NAME,
HCL_LEVEL_NAME, HCL_NODE_CODE, HCL_FULL_LINEAGE, HCL_ID, HCL_NODE_ID, HCL_TYPE_ID, 
HCL_TYPE_LEVEL_ID)
    SELECT LOWER(SYS_GUID()), 1, 1, '/', CMHN.MEMBER_ID AS "userId", CHT.DESCRIPTION AS "hclTypeName", 
    CHTL.NAME AS "hclLevelName", NODE.CODE AS "hclNodeCode", NODE.FULL_LINEAGE AS "hclFullLineage", CHT.ID AS "hclId", hcl_node_id AS "hclNodeId", CHT.ID AS "hclTypeId",
    CHTL.ID AS "hclTypeLevelId"
    FROM CNT_MEMBER_HCL_NODE CMHN
    LEFT JOIN CNT_HCL_NODE NODE ON NODE.ID = CMHN.HCL_NODE_ID
    LEFT JOIN CNT_HCL_TYPE CHT ON CHT.ID = NODE.HCL_ID
    LEFT JOIN CNT_HCL_TYPE_LEVEL CHTL ON CHTL.PARENT_ID = CHT.ID AND CHTL.TYPE_LEVEL = NODE.NODE_LEVEL
    WHERE CMHN.MEMBER_TYPE = 1 AND CMHN.DOMAIN_ID = '/';
-- CNT-6070 END --

-- CNT-6300 Begin --
CREATE OR REPLACE PROCEDURE SP_INIT_ROLE_GRANT_DENY(I_DOMAIN_ID IN VARCHAR2)
AS
        CURSOR C_ROLE_LIST IS SELECT ID
                            FROM CNT_ROLE WHERE DOMAIN_ID = I_DOMAIN_ID;
        CURSOR C_RULE_OBJECT_LIST IS SELECT DISTINCT ACCESS_OBJECT_ID,CAO.NAME as objectName,  CR.ID AS ROLE_ID FROM cnt_rule_action CRA, CNT_ACCESS_OBJECT CAO, CNT_ROLE CR
                                    WHERE CRA.access_object_id = CAO.ID AND CRA.ROLE_ID = CR.ID AND CRA.DOMAIN_ID = I_DOMAIN_ID
                                    union
                                    SELECT DISTINCT ACCESS_OBJECT_ID,CAO.NAME as objectName,  CR.ID AS ROLE_ID FROM cnt_rule_ui CRi, CNT_ACCESS_OBJECT CAO, CNT_ROLE CR
                                    WHERE CRi.access_object_id = CAO.ID AND CRi.ROLE_ID = CR.ID AND CRi.DOMAIN_ID = I_DOMAIN_ID
                                    union
                                    select  DISTINCT ACCESS_OBJECT_ID,CAO.NAME as objectName,  CR.ID AS ROLE_ID FROM cnt_rule_field_deny Crfd, CNT_ACCESS_OBJECT CAO, CNT_ROLE CR 
                                    WHERE Crfd.access_object_id = CAO.ID AND  Crfd.ROLE_ID = CR.ID AND Crfd.DOMAIN_ID = I_DOMAIN_ID;
    V_GRANTED_DENIED_VALUES VARCHAR(1500);
BEGIN
      -- 1. For loop the role list 
      FOR C_ROLE IN C_ROLE_LIST
      LOOP
        V_GRANTED_DENIED_VALUES := '';
        -- 2. Loop the rule action
        FOR C_OBJECT IN C_RULE_OBJECT_LIST
        LOOP
          IF C_ROLE.ID = C_OBJECT.ROLE_ID THEN
              IF LENGTH(V_GRANTED_DENIED_VALUES) > 0 AND LENGTH(V_GRANTED_DENIED_VALUES) < 1500 THEN
                V_GRANTED_DENIED_VALUES := V_GRANTED_DENIED_VALUES || ', ';
              END IF;
              IF LENGTH(V_GRANTED_DENIED_VALUES) < 1500 THEN
              	V_GRANTED_DENIED_VALUES := V_GRANTED_DENIED_VALUES || C_OBJECT.objectName;
              END IF;
          END IF;
        END LOOP;
         -- 3. UPDATE THE GRANTED_DENIED_VALUES
        UPDATE CNT_ROLE SET GRANTED_DENIED_VALUES = V_GRANTED_DENIED_VALUES WHERE ID = C_ROLE.ID;
      END LOOP;
END;
/

CALL SP_INIT_ROLE_GRANT_DENY('/');

DROP PROCEDURE SP_INIT_ROLE_GRANT_DENY;
-- CNT-6300 END --
WHENEVER SQLERROR EXIT sql.sqlcode ROLLBACK
SET DEFINE OFF

---CNT-10709 BEGIN-----------
UPDATE CNT_RFQ SET requested_user_name = requested_by;
UPDATE CNT_RFQ rfq SET rfq.requested_by = (select login_id || '@' || domain_id from cnt_user where user_name = rfq.requested_user_name and rownum = 1);
---CNT-10709 END-----------

---CNT-10785 BEGIN-----------
UPDATE cnt_qc qc SET spec_id = (SELECT spec_id
                    FROM cnt_item item
                   WHERE qc.item_id = item.ID)
 WHERE spec_id IS NULL;
---CNT-10785 END-----------

--// BEG: CNT-10852
INSERT INTO CNT_CODELIST (ID,REVISION,ENTITY_VERSION,PARENT_ID,NAME,CODE,DOMAIN_ID,SEQ_NO,DISABLED,HUB_DOMAIN_ID, IS_FOR_REFERENCE,INTERNAL_SEQ_NO) 
SELECT LOWER(SYS_GUID()), 1, 1,ID,'Default for QUOTE', 'DEFAULT_FOR_QUOTE', DOMAIN_ID, 1, 0,'/', 0, 1 FROM CNT_CODELIST_BOOK CB
WHERE NAME = 'CONTACT_TYPE' AND VERSION = (SELECT MAX(VERSION) FROM CNT_CODELIST_BOOK 
WHERE NAME = 'CONTACT_TYPE' AND DOMAIN_ID = '/') AND DOMAIN_ID = '/' AND 
NOT EXISTS (SELECT 1 FROM CNT_CODELIST WHERE DOMAIN_ID = '/' AND NAME = 'Default for QUOTE' AND CODE = 'DEFAULT_FOR_QUOTE' AND PARENT_ID =CB.ID );

INSERT INTO CTM_CODELIST_BOOK (ID,DOMAIN_ID,REF_ENTITY_NAME)  select  (SELECT ID from cnt_codelist where parent_id in (SELECT ID from cnt_codelist_book where name='CONTACT_TYPE' AND DOMAIN_ID='/') and code='DEFAULT_FOR_QUOTE'),'/','CodelistBook' 
FROM DUAL WHERE NOT EXISTS (SELECT 1 FROM CTM_CODELIST_BOOK WHERE DOMAIN_ID = '/' AND ID = (SELECT ID from cnt_codelist where parent_id in (SELECT ID from cnt_codelist_book where name='CONTACT_TYPE' AND DOMAIN_ID='/') and code='DEFAULT_FOR_QUOTE'));
--// END: CNT-10852

---CNT-10901 BEGIN-----------
UPDATE CNT_CODELIST SET NAME = 'Comprehensive Quote' WHERE NAME = 'Comphensive Quote';
---CNT-10901 END-----------

---CNT-10550 BEGIN-----------
update CNT_USER_NAVI_DEFAULT set type=1 WHERE TYPE IS NULL;
---CNT-10550 END-----------

-----------------------------------------begin for CNT-9463--------------------------------------
DECLARE   
TYPE DOMAINS_TYPE IS TABLE OF CNT_DOMAIN.DOMAIN_ID%TYPE INDEX BY PLS_INTEGER;  
V_DOMAIN_IDS DOMAINS_TYPE;  
V_INSERT_SQL VARCHAR2(1000);  
V_DOMAIN_ID VARCHAR2(100);  
TYPE idx_loc_type IS TABLE OF VARCHAR2( 130 )  INDEX BY PLS_INTEGER;
   loc_tab     idx_loc_type; 
BEGIN  
    SELECT ID BULK COLLECT INTO V_DOMAIN_IDS FROM CNT_DOMAIN WHERE ID NOT IN ('/', 'backend', 'test')
    AND NOT EXISTS (
    SELECT 1  
    FROM CNT_EXTERNAL_ACCESS_REQUEST ear
    WHERE ear.EXTERNAL_DOMAIN_TYPE = 'new'
    AND CNT_DOMAIN.ID = ear.EXTERNAL_DOMAIN_ID
    );
      loc_tab( 1 ) := 'CBX_SEQ_ACCESS_OBJECT_REF_NO';
      loc_tab( 2 ) := 'CBX_SEQ_DEFAULT_PROFILE_REF_NO';
      loc_tab( 3 ) := 'CBX_SEQ_SYSTEM_FILE_REF_NO';
      
          FOR I IN V_DOMAIN_IDS.FIRST..V_DOMAIN_IDS.LAST 
          LOOP  
        for o in 1..loc_tab.count 
        LOOP
        V_DOMAIN_ID := V_DOMAIN_IDS(I);  
        V_INSERT_SQL := 'INSERT INTO CNT_SEQ_DEF(REVISION, ENTITY_VERSION, DOMAIN_ID, ID, START_WITH, MAX_VALUE, CYCLE, CACHE_SIZE, UPDATED_ON, INTERNAL_SEQ_NO,  
                                   SEQ_ID, NEXT_VAL, CYCLE_STARTED_ON, HUB_DOMAIN_ID, IS_FOR_REFERENCE, INCREMENT_BY) SELECT 0, ENTITY_VERSION, ''' || V_DOMAIN_ID || ''', 
                                   SYS_GUID(), START_WITH, MAX_VALUE, CYCLE, CACHE_SIZE, NULL, INTERNAL_SEQ_NO,  SEQ_ID, 1, NULL, ''' || V_DOMAIN_ID || ''', 
                                   IS_FOR_REFERENCE, INCREMENT_BY FROM CNT_SEQ_DEF WHERE SEQ_ID = ''' || loc_tab(o) || ''' AND DOMAIN_ID = ''/'' AND NOT EXISTS (SELECT 1 FROM CNT_SEQ_DEF WHERE SEQ_ID = ''' || loc_tab(o) || ''' AND DOMAIN_ID = ''' || V_DOMAIN_ID|| ''' )';  
        -- duplicate a new record for domainId  
        EXECUTE IMMEDIATE V_INSERT_SQL;
        ENd LOOP;
    END LOOP;  
END;   
/
-----------------------------------codelist book-------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_CODELIST_BOOK
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_CODELIST_BOOK SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_CODE_LIST_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_CODE_LIST_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_CODELIST_BOOK WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_CODELIST_BOOK SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_CODELIST_BOOK NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_CODELIST_BOOK LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-----------------------------------cost Templ -------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_COST_TEMPL
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_COST_TEMPL SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_COST_TEMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_COST_TEMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_COST_TEMPL WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_COST_TEMPL SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_COST_TEMPL NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_COST_TEMPL LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-----------------------------aprv template----------------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_APRV_TEMPL
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_APRV_TEMPL SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_APRV_TEMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_APRV_TEMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_APRV_TEMPL WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_APRV_TEMPL SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_APRV_TEMPL NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_APRV_TEMPL LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/' AND ROWNUM = 1) WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-------------------------------cpm template-------------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_CPM_TEMPL
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_CPM_TEMPL SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_CPM_TEMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_CPM_TEMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_CPM_TEMPL WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_CPM_TEMPL SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_CPM_TEMPL NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_CPM_TEMPL LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------fact audit template---------------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_FACTORY_AUDIT_TEMPLATE
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_FACTORY_AUDIT_TEMPLATE SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_FACT_AUDIT_TMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_FACT_AUDIT_TMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_FACTORY_AUDIT_TEMPLATE WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_FACTORY_AUDIT_TEMPLATE SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_FACTORY_AUDIT_TEMPLATE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_FACTORY_AUDIT_TEMPLATE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
--------------------------------qc checklist template----------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_QC_TEMPLATE
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_QC_TEMPLATE SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_QC_TEMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_QC_TEMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_QC_TEMPLATE WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_QC_TEMPLATE SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_QC_TEMPLATE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_QC_TEMPLATE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
----------------------------------measurement template--------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_MEASUREMENT_TEMPLATE
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_MEASUREMENT_TEMPLATE SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_MEASURE_TMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_MEASURE_TMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_MEASUREMENT_TEMPLATE WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_MEASUREMENT_TEMPLATE SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_MEASUREMENT_TEMPLATE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_MEASUREMENT_TEMPLATE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
----------------------------------size template--------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_SIZE_TEMPLATE
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_SIZE_TEMPLATE SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_SIZE_TEMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_SIZE_TEMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_SIZE_TEMPLATE WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_SIZE_TEMPLATE SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_SIZE_TEMPLATE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_SIZE_TEMPLATE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-------------------------------------spec templ---------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_SPEC_TEMPLATE
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_SPEC_TEMPLATE SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_SPEC_TEMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_SPEC_TEMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_SPEC_TEMPLATE WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_SPEC_TEMPLATE SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_SPEC_TEMPLATE  NOTLATEST  SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_SPEC_TEMPLATE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
--------------------------------------vendor charges template----------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_VENDOR_CHARGES_TEMPLATE
      WHERE (REF_NO NOT LIKE 'TMPL__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_VENDOR_CHARGES_TEMPLATE SET REF_NO = 'TMPL'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_VENDOR_CHA_TMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_VENDOR_CHA_TMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,8,6))),0) INTO MAX_VAL
    FROM CNT_VENDOR_CHARGES_TEMPLATE WHERE REF_NO LIKE 'TMPL__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_VENDOR_CHARGES_TEMPLATE SET REF_NO = 'TMPL' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_VENDOR_CHARGES_TEMPLATE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_VENDOR_CHARGES_TEMPLATE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-------------------------------------"S" + [YY]@CurrentDate + "-" +[999999]-----------------------------------------------------
-------------------------------------condition-----------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_CONDITION
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_CONDITION SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_CONDITION_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_CONDITION_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_CONDITION WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_CONDITION SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_CONDITION NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_CONDITION LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
--------------------------------cpm task template----------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_CPM_TASK_TEMPL
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_CPM_TASK_TEMPL SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_CPM_TASK_TMPL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_CPM_TASK_TMPL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_CPM_TASK_TEMPL WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_CPM_TASK_TEMPL SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_CPM_TASK_TEMPL NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_CPM_TASK_TEMPL LATEST WHERE LATEST.task_NAME = NOTLATEST.task_NAME AND LATEST.task_id = NOTLATEST.task_id and LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------------------custom field def---------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_CUSTOM_FIELD_DEF
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_CUSTOM_FIELD_DEF SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_CUST_FIELD_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_CUST_FIELD_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_CUSTOM_FIELD_DEF WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_CUSTOM_FIELD_DEF SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_CUSTOM_FIELD_DEF NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_CUSTOM_FIELD_DEF LATEST WHERE LATEST.apply_to_entity = NOTLATEST.apply_to_entity AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------------data list type---------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_DATA_LIST_TYPE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_DATA_LIST_TYPE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_DATA_LIST_TYPE_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_DATA_LIST_TYPE_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_DATA_LIST_TYPE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_DATA_LIST_TYPE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_DATA_LIST_TYPE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_DATA_LIST_TYPE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
--------------------------------------domain----------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_DOMAIN
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_DOMAIN SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_DOMAIN_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_DOMAIN_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_DOMAIN WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_DOMAIN SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_DOMAIN NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_DOMAIN LATEST WHERE LATEST.id = NOTLATEST.id AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------------trigger /event---------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_TRIGGER
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_TRIGGER SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_EVENT_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_EVENT_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_TRIGGER WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_TRIGGER SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_TRIGGER NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_TRIGGER LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
------------------------------------group------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_GROUP
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_GROUP SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_GROUP_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_GROUP_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_GROUP WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_GROUP SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_GROUP NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_GROUP LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
--------------------------------------hcl type----------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_HCL_TYPE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_HCL_TYPE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_HCL_TYPE_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_HCL_TYPE_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_HCL_TYPE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_HCL_TYPE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_HCL_TYPE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_HCL_TYPE LATEST WHERE LATEST.type = NOTLATEST.type AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-------------------------------------------hcl-----------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_HCL
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_HCL SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_HCL_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_HCL_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_HCL WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_HCL SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_HCL NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_HCL LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-----------------------------------lookup book-------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_LOOKUP_BOOK
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_LOOKUP_BOOK SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_LOOKUP_BOOK_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_LOOKUP_BOOK_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_LOOKUP_BOOK WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_LOOKUP_BOOK SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_LOOKUP_BOOK NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_LOOKUP_BOOK LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
----------------------------------------notification--------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_NOTIFICATION_PROFILE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_NOTIFICATION_PROFILE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_NOTIFICATION_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_NOTIFICATION_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_NOTIFICATION_PROFILE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_NOTIFICATION_PROFILE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_NOTIFICATION_PROFILE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_NOTIFICATION_PROFILE LATEST WHERE LATEST.profile_name = NOTLATEST.profile_name AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------------------role---------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_ROLE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_ROLE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_ROLE_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_ROLE_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_ROLE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_ROLE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_ROLE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_ROLE LATEST WHERE LATEST.NAME = NOTLATEST.NAME AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-----------------------------------user-------------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_USER
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_USER SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_USER_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_USER_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_USER WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_USER SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_USER NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_USER LATEST WHERE LATEST.login_id = NOTLATEST.login_id AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
--------------------------Component module-----------
 DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_COMPONENT
      WHERE REF_NO NOT LIKE 'CMPT____-0%'
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YYMM') = TO_CHAR(SYSDATE,'YYMM') THEN
      UPDATE CNT_COMPONENT SET REF_NO = 'CMPT'|| TO_CHAR(CREATED_ON,'YYMM') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_COMPONENT_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_COMPONENT_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,10,6))),0) INTO MAX_VAL
    FROM CNT_COMPONENT WHERE REF_NO LIKE 'CMPT____-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YYMM')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YYMM');
    UPDATE CNT_COMPONENT SET REF_NO = 'CMPT' || TO_CHAR (CREATED_ON,'YYMM') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_COMPONENT  NOTLATEST  SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_COMPONENT LATEST WHERE LATEST.COMPONENT_NO = NOTLATEST.COMPONENT_NO AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
----------------------------------------system file--------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_SYSTEM_FILE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_SYSTEM_FILE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_SYSTEM_FILE_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_SYSTEM_FILE_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_SYSTEM_FILE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_SYSTEM_FILE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_SYSTEM_FILE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_SYSTEM_FILE LATEST WHERE LATEST.system_File_Id = NOTLATEST.system_File_Id AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------------------default profile---------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_DEFAULT_PROFILE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_DEFAULT_PROFILE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_DEFAULT_PROFILE_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_DEFAULT_PROFILE_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_DEFAULT_PROFILE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_DEFAULT_PROFILE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_DEFAULT_PROFILE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_DEFAULT_PROFILE LATEST WHERE LATEST.ref_Entity_Name = NOTLATEST.ref_Entity_Name AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
---------------------------------------access Object---------------------------------------------------
DECLARE
MAX_VAL VARCHAR2(20);
I_DOMAIN_ID VARCHAR2(20) :='/';
   CURSOR CSELECT
   IS
      SELECT ID, CREATED_ON, REF_NO FROM CNT_DEFAULT_PROFILE
      WHERE (REF_NO NOT LIKE 'S__-0%' OR REF_NO IS NULL)
      AND IS_LATEST ='1' AND DOMAIN_ID ='/';            
BEGIN
FOR SELECT_RECORD IN CSELECT
LOOP 
    IF TO_CHAR(SELECT_RECORD.CREATED_ON,'YY') = TO_CHAR(SYSDATE,'YY') THEN
      UPDATE CNT_DEFAULT_PROFILE SET REF_NO = 'S'|| TO_CHAR(CREATED_ON,'YY') || '-'|| LPAD(TO_CHAR(NVL((SELECT NEXT_VAL FROM CNT_SEQ_DEF WHERE DOMAIN_ID =I_DOMAIN_ID AND SEQ_ID ='CBX_SEQ_DEFAULT_PROFILE_REF_NO'),0)),6,'0')  
      WHERE ID = SELECT_RECORD.ID;
      UPDATE CNT_SEQ_DEF SET NEXT_VAL = NEXT_VAL +1 WHERE SEQ_ID= 'CBX_SEQ_DEFAULT_PROFILE_REF_NO' AND DOMAIN_ID = I_DOMAIN_ID;
    ELSE
    SELECT  NVL(MAX(TO_NUMBER( SUBSTR (REF_NO,5,6))),0) INTO MAX_VAL
    FROM CNT_DEFAULT_PROFILE WHERE REF_NO LIKE 'S__-0%' AND DOMAIN_ID =I_DOMAIN_ID AND IS_LATEST=1 AND TO_CHAR(CREATED_ON,'YY')=TO_CHAR(SELECT_RECORD.CREATED_ON,'YY');
    UPDATE CNT_DEFAULT_PROFILE SET REF_NO = 'S' || TO_CHAR (CREATED_ON,'YY') || '-'
      || LPAD(TO_CHAR(MAX_VAL+1),6,'0')  
       WHERE ID = SELECT_RECORD.ID;
    END IF;
END LOOP;
    END;
/
UPDATE CNT_DEFAULT_PROFILE NOTLATEST SET NOTLATEST.REF_NO = (SELECT LATEST.REF_NO FROM CNT_DEFAULT_PROFILE LATEST WHERE LATEST.ref_Entity_Name = NOTLATEST.ref_Entity_Name AND LATEST.IS_LATEST =1 
AND DOMAIN_ID = '/') WHERE NOTLATEST.IS_LATEST = 0 AND NOTLATEST.DOMAIN_ID ='/';
-----------------------------------------end for CNT-9463--------------------------------------

--CNT-10861 BEGIN------
DECLARE
  update_sql VARCHAR2(1000);
BEGIN 
  FOR t IN (SELECT TABLE_NAME FROM USER_TABLES UT WHERE EXISTS (SELECT 1 FROM USER_TAB_COLUMNS WHERE TABLE_NAME = UT.TABLE_NAME AND COLUMN_NAME = 'IS_CPM_INITIALIZED'))
    LOOP
      update_sql := 'UPDATE ' || t.TABLE_NAME || ' doc SET ' ||  'doc.IS_CPM_INITIALIZED = 1 WHERE  EXISTS (SELECT 1 FROM CNT_CPM_DOC WHERE DOC_ID=doc.ID AND IS_LATEST=1 AND MODULE=(SELECT MODULE FROM CNT_ENTITY_DEFINITION WHERE PRODUCT_TABLE_NAME='''||  t.TABLE_NAME ||''')) ';
      EXECUTE IMMEDIATE update_sql;
    END LOOP;
END;
/
--CNT-10861 END-----
--CNT-10728 -----
  CREATE OR REPLACE FORCE VIEW CNT_V_MPO_ITEM_MAPPED (ID, REVISION, ENTITY_VERSION, DOMAIN_ID, MPO_ID, ITEM_ID, QUOTATION_ID, ITEM_NO, VENDOR_ITEM_NO, CUST_ITEM_NO, ITEM_DESC, IS_SET, LOT_NO, MERCHANDISE_HIERARCHY_ID, SPEC_VERSION, SPEC_ID, PRICE, INSTRUCTIONS, QTY, TOTAL_AMT, ASSORT_QTY, UOM, MARKET, CHANNEL, DELIVERY_FROM, DELIVERY_TO, COUNTRY_OF_ORIGIN, CONTAINER_TYPE, COUNT_OF_CONTAINER, TRUCK_TYPE, COUNT_OF_TRUCK, CBM, V_IS_SET) AS
  SELECT mpi.ID,
    mpi.revision,
    mpi.entity_version,
    mpi.domain_id,
    mpi.mpo_id,
    mpi.item_id,
    mpi.quotation_id,
    mpi.item_no,
    mpi.vendor_item_no,
    mpi.cust_item_no,
    mpi.item_desc,
    mpi.is_set,
    mpi.lot_no,
    mpi.merchandise_hierarchy_id,
    mpi.spec_version,
    mpi.spec_id,
    mpi.price,
    mpi.instructions,
    mpi.qty,
    mpi.total_amt,
    mpi.assort_qty,
    mpi.uom,
    mpi.market,
    mpi.channel,
    mpi.delivery_from,
    mpi.delivery_to,
    mpi.country_of_origin,
    mpi.container_type,
    mpi.count_of_container,
    mpi.truck_type,
    mpi.count_of_truck,
    mpi.cbm,
    DECODE (mpi.is_set, 0, '', 1, 'Set')
  FROM cnt_mpo_item mpi;
--END OF CNT-10728 -----

--//BEG: CNT-10964 (S60)
-- // [PART-1]
-- // update IS_VENDOR_ACCESS = 1 for hub vendor profiles which vendors access already approved
-- // PORFILE_TYPE = 0, i.e. Normal profile
UPDATE cnt_vendor v SET is_vendor_access = 1
WHERE EXISTS (
  SELECT 1 FROM cnt_external_access_request ear
  WHERE ear.external_party_id = v.id
  AND ear.status = 'approved'
)
AND v.is_for_reference = 0
AND v.profile_type = 0;

-- // update IS_VENDOR_ACCESS = 1 in external vendor profiles
-- // PROFILE_TYPE = 1, i.e. External proflie
UPDATE cnt_vendor v SET is_vendor_access = 1
WHERE EXISTS (
  SELECT 1 FROM cnt_external_access_request ear
  WHERE ear.external_domain_id = v.domain_id
  AND ear.status = 'approved'
)
AND v.is_for_reference = 0
AND v.profile_type = 1;

-- // update IS_VENDOR_ACCESS = 1 for the profiles which are ready for hub domain update
UPDATE cnt_vendor SET is_vendor_access = 1 WHERE profile_type = 2;

-- // update IS_VENDOR_ACCEESS = 0 for the profiles which do not have the flag value
UPDATE cnt_vendor SET is_vendor_access = 0 WHERE is_vendor_access IS NULL;

-- // clear cached vendor entities
DELETE FROM cnt_serialized_entity WHERE target_entity = 'Vendor';

--// [PART2]
--// Setup notification profile for External Domain Account Activation
INSERT INTO cnt_notification_profile (
  id, revision, entity_version, domain_id, version,
  doc_status, editing_status, create_user, created_on,
  profile_name,
  profile_desc,
  subject,
  content,
  priority, inbox_enabled, email_enabled,
  to_apl_requester, to_apl_current_approver, to_apl_next_approver,
  ref_no,
  hub_domain_id, is_for_reference, is_latest, create_user_name, update_user_name
) VALUES (
  Sys_Guid(), 1, 1, '/', 1,
  'active', 'confirmed', 'system', SYSDATE,
  'External Domain Account Activation Notification Profile',
  'Notification profile to notify user account information in established master domain',
  'Welcome to CBX!',
  '<p font-size:="" style="padding-left:2em;font-family:">
  Dear User,</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Your CBX account is now ready.You can start using the service with the following URL and login details:</p>
<p font-size:="" style="padding-left:2em;font-family:">
  URL: <a href="${(serverUrl)!""}" style="font-family: Calibri, sans-serif; font-size: 14px;">${(serverUrl)!""}</a><br />
  User ID: ${(reqDoc.loginId)!""}<br />
  Password: (To be provided to you in a separate email)</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Thank you for your attention.</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Best Regards,<br />
  CBX Administrator</p>',
  0, 0, 1,
  0, 0, 0,
  'External Domain Account Activation Notification Profile',
  '/', 0, 1, 'system', 'system');

--// Setup notification profile for External Domain Account Password notiifcation
INSERT INTO cnt_notification_profile (
  id, revision, entity_version, domain_id, version,
  doc_status, editing_status, create_user, created_on,
  profile_name,
  profile_desc,
  subject,
  content,
  priority, inbox_enabled, email_enabled,
  to_apl_requester, to_apl_current_approver, to_apl_next_approver,
  ref_no,
  hub_domain_id, is_for_reference, is_latest, create_user_name, update_user_name
) VALUES (
  Sys_Guid(), 1, 1, '/', 1,
  'active', 'confirmed', 'system', SYSDATE,
  'External Domain Account Password Notification Profile',
  'Notification profile to notify user account password in established master domain',
  'Welcome to CBX!',
  '<p font-size:="" style="padding-left:2em;font-family:">
  Dear User,</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Please find below a temporary password for your CBX account. Please use this with the URL &amp; Login ID provided in our previous email to start using the application:</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Password: ${(password)!""}</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Thank you for your attention.</p>
<p font-size:="" style="padding-left:2em;font-family:">
  Best Regards,<br />
  CBX Administrator</p>',
  0, 0, 1,
  0, 0, 0,
  'External Domain Account Password Notification Profile',
  '/', 0, 1, 'system', 'system');

--//END: CNT-10964 (S60)


COMMIT;   